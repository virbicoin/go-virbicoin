// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// faucet.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x7b\x93\xdb\x46\x72\xff\x7b\xf5\x29\xda\x88\x74\x24\xa3\x05\xc0\xdd\x95\x74\x0a\x09\xd0\xa5\xd3\xf9\x2e\x4a\x25\xb6\xcb\x96\x93\x5c\xf9\x5c\xa9\x01\xd0\x24\x46\x3b\x98\x81\x67\x06\xe4\xd2\x5b\xfc\xee\xa9\x9e\x01\x40\xf0\xb1\x6b\xe9\xa4\x54\x45\x7f\xac\x80\x79\x74\xf7\x74\xff\x7a\xfa\x01\x26\x5f\xfd\xf9\xbb\xb7\xef\xff\xf6\xfd\x37\x50\xda\x4a\x2c\x9e\x24\xf4\x1f\x08\x26\x57\x69\x80\x32\x58\x3c\xb9\x48\x4a\x64\xc5\xe2\xc9\xc5\x45\x52\xa1\x65\x90\x97\x4c\x1b\xb4\x69\xd0\xd8\x65\xf8\x3a\xd8\x4f\x94\xd6\xd6\x21\xfe\xda\xf0\x75\x1a\xfc\x77\xf8\xd3\x9b\xf0\xad\xaa\x6a\x66\x79\x26\x30\x80\x5c\x49\x8b\xd2\xa6\xc1\xbb\x6f\x52\x2c\x56\x38\xd8\x27\x59\x85\x69\xb0\xe6\xb8\xa9\x95\xb6\x83\xa5\x1b\x5e\xd8\x32\x2d\x70\xcd\x73\x0c\xdd\xcb\x25\x70\xc9\x2d\x67\x22\x34\x39\x13\x98\x5e\x05\x8b\x27\x44\xc7\x72\x2b\x70\x71\x7f\x1f\x7d\x8b\x76\xa3\xf4\xed\x6e\x37\x83\x37\x8d\x2d\x51\x5a\x9e\x33\x8b\x05\xfc\x85\x35\x39\xda\x24\xf6\x2b\xdd\x26\xc1\xe5\x2d\x94\x1a\x97\x69\x40\xa2\x9b\x59\x1c\xe7\x85\xfc\x60\xa2\x5c\xa8\xa6\x58\x0a\xa6\x31\xca\x55\x15\xb3\x0f\xec\x2e\x16\x3c\x33\xb1\xdd\x70\x6b\x51\x87\x99\x52\xd6\x58\xcd\xea\xf8\x26\xba\x89\xfe\x18\xe7\xc6\xc4\xfd\x58\x54\x71\x19\xe5\xc6\x04\xa0\x51\xa4\x81\xb1\x5b\x81\xa6\x44\xb4\x01\xc4\x8b\x7f\x8c\xef\x52\x49\x1b\xb2\x0d\x1a\x55\x61\xfc\x22\xfa\x63\x34\x75\x2c\x87\xc3\x8f\x73\x25\xb6\x26\xd7\xbc\xb6\x60\x74\xfe\xd1\x7c\x3f\xfc\xda\xa0\xde\xc6\x37\xd1\x55\x74\xd5\xbe\x38\x3e\x1f\x4c\xb0\x48\x62\x4f\x70\xf1\x59\xb4\x43\xa9\xec\x36\xbe\x8e\x5e\x44\x57\x71\xcd\xf2\x5b\xb6\xc2\xa2\xe3\x44\x53\x51\x37\xf8\xc5\xf8\x3e\x64\xc3\x0f\xc7\x26\xfc\x12\xcc\x2a\x55\xa1\xb4\xd1\x07\x13\x5f\x47\x57\xaf\xa3\x69\x37\x70\x4a\xdf\x31\x20\xa3\x11\xab\x8b\x68\x8d\x9a\x90\x2b\xc2\x1c\xa5\x45\x0d\xf7\x34\x7a\x51\x71\x19\x96\xc8\x57\xa5\x9d\xc1\xd5\x74\xfa\x6c\x7e\x6e\x74\x5d\xfa\xe1\x82\x9b\x5a\xb0\xed\x0c\x96\x02\xef\xfc\x10\x13\x7c\x25\x43\x6e\xb1\x32\x33\xf0\x94\xdd\xc4\xce\xf1\xac\xb5\x5a\x69\x34\xa6\x65\x56\x2b\xc3\x2d\x57\x72\x46\x88\x62\x96\xaf\xf1\xdc\x5a\x53\x33\x79\xb2\x81\x65\x46\x89\xc6\xe2\x91\x20\x99\x50\xf9\xad\x1f\x73\xde\x3c\x3c\x44\xae\x84\xd2\x33\xd8\x94\xbc\xdd\x06\x8e\x11\xd4\x1a\x5b\xf2\x50\xb3\xa2\xe0\x72\x35\x83\x57\x75\x7b\x1e\xa8\x98\x5e\x71\x39\x83\xe9\x7e\x4b\x12\x77\x6a\x4c\x62\x7f\x71\x3d\xb9\x48\x32\x55\x6c\x9d\x0d\x0b\xbe\x86\x5c\x30\x63\xd2\xe0\x48\xc5\xee\x42\x3a\x58\x40\xf7\x10\xe3\xb2\x9b\x3a\x98\xd3\x6a\x13\x80\x63\x94\x06\x5e\x88\x30\x53\xd6\xaa\x6a\x06\x57\x24\x5e\xbb\xe5\x88\x9e\x08\xc5\x2a\xbc\xba\xee\x26\x2f\x92\xf2\xaa\x23\x62\xf1\xce\x86\xce\x3e\xbd\x65\x82\x45\xc2\xbb\xbd\x4b\x06\x4b\x16\x66\xcc\x96\x01\x30\xcd\x59\x58\xf2\xa2\x40\x99\x06\x56\x37\x48\x38\xe2\x0b\x18\x5e\x7f\x0f\xdc\x7e\xe5\x55\x27\x57\x5c\xf0\x75\x7b\xac\xc1\xe3\xd1\x09\x1f\x3e\xc4\x6b\x68\x1f\xd4\x72\x69\xd0\x86\x83\x33\x0d\x16\x73\x59\x37\x36\x5c\x69\xd5\xd4\xfd\xfc\x45\xe2\x46\x81\x17\x69\xd0\x68\x11\xb4\xd7\xbf\x7b\xb4\xdb\xba\x55\x45\xd0\x1f\x5c\xe9\x2a\x24\x4b\x68\x25\x02\xa8\x05\xcb\xb1\x54\xa2\x40\x9d\x06\x3f\xaa\x9c\x33\x01\xd2\x9f\x19\x7e\xfa\xe1\xdf\xa1\x35\x19\x97\x2b\xd8\xaa\x46\xc3\x7f\x72\xfd\x27\xfe\x56\x71\x09\xac\x28\x08\xaf\x51\x14\x05\xf1\x5e\x14\x87\xde\x53\x61\xc3\xcc\xca\xbd\xc0\x17\x49\xd6\x58\xab\xfa\x85\x99\x95\x90\x59\x19\x16\xb8\x64\x8d\xb0\x50\x68\x55\x17\x6a\x23\x43\xab\x56\x2b\x8a\x75\xfe\x18\x7e\x53\x00\x05\xb3\xac\x9d\x4a\x83\x6e\x6d\x67\x45\x66\x6a\x55\x37\x75\x6b\x47\x3f\x88\x77\x35\x93\x05\x16\x64\x75\x61\x30\x58\xfc\x95\xaf\x11\x2a\x84\x6f\x6c\x89\xfa\xe2\x18\x14\x39\xd3\x68\xc3\x21\xd1\x13\x68\x24\xb1\x17\xc6\x1f\x09\xda\x7f\x49\x23\x3a\x4a\xfd\x11\x2a\x94\x0d\x1c\xbc\x85\x9a\x6e\x96\x60\x71\x7f\xaf\x99\x5c\x21\x3c\xe5\xc5\xdd\x25\x3c\x65\x95\x6a\xa4\x85\x59\x0a\xd1\x1b\xf7\x68\x76\xbb\x03\xea\x00\x89\xe0\x8b\x84\x3d\x06\x70\x50\x32\x17\x3c\xbf\x4d\x03\xcb\x51\xa7\xf7\xf7\x44\x7c\xb7\x9b\xc3\xfd\x3d\x5f\xc2\xd3\xe8\x07\xcc\x59\x6d\xf3\x92\xed\x76\x2b\xdd\x3d\x47\x78\x87\x79\x63\x71\x3c\xb9\xbf\x47\x61\x70\xb7\x33\x4d\x56\x71\x3b\xee\xb6\xd3\xb8\x2c\x76\x3b\x92\xb9\x95\x73\xb7\x83\x98\x88\xca\x02\xef\xe0\x69\xf4\x3d\x6a\xae\x0a\x03\x7e\x7d\x12\xb3\x45\x12\x0b\xbe\x68\xf7\x1d\x2a\x29\x6e\xc4\x1e\x2f\x31\x01\xa6\x47\xba\x73\x1c\x27\xea\x50\xd2\x33\x7e\xb0\x0a\x7b\xe9\x5b\x3c\x18\x6e\xf1\x16\xb7\x69\x70\x7f\x3f\xdc\xdb\xce\xe6\x4c\x88\x8c\x91\x5e\xfc\xd1\xfa\x4d\xbf\x21\xe1\x74\xcd\x8d\x4b\xaa\x16\x9d\x04\x7b\xb1\x3f\xd2\xb1\x8f\xae\x2e\xab\xea\x19\xdc\x5c\x0f\xee\xad\x73\x3e\xff\xea\xc8\xe7\x6f\xce\x2e\xae\x99\x44\x01\xee\x6f\x68\x2a\x26\xba\xe7\xd6\x5b\x06\xf7\xc0\xf1\xa6\x90\x6e\xe9\x5e\xb4\xfe\xb6\x9f\xce\x41\xad\x51\x2f\x85\xda\xcc\x80\x35\x56\xcd\xa1\x62\x77\x7d\xc4\xbb\x99\x4e\x87\x72\x53\x32\xc8\x32\x81\xee\x7e\xd1\xf8\x6b\x83\xc6\x9a\xfe\x36\xf1\x53\xee\x2f\x5d\x2a\x05\x4a\x83\xc5\x91\x36\x88\x23\xa9\xd6\xad\x1a\x98\xbe\x57\xe6\x59\xd9\x97\x4a\xf5\x41\x64\x28\x46\x4b\x7a\x10\xef\x82\x45\x62\xf5\x7e\xdd\x45\x62\x8b\x4f\x0a\x02\x9a\x92\xbc\x87\x62\x80\xbf\xd1\xe8\xec\x35\xa2\xf6\x19\x06\x41\x16\xdc\x6b\x12\xdb\xe2\x33\x38\x13\x08\x33\x66\xf0\x63\xd8\xbb\x58\xbf\x67\xef\x5e\x3f\x97\x7f\x89\x4c\xdb\x0c\x99\xfd\x18\x01\x96\x8d\x2c\x06\xe7\x77\x77\xe7\xe7\x0a\xd0\x48\xbe\x46\x6d\xb8\xdd\x7e\xac\x04\x58\xec\x45\xf0\xef\x87\x22\x24\xb1\xd5\x8f\x63\x6d\xf8\xf2\x85\x9c\xfb\xf7\x92\x92\x9b\xc5\xbf\xaa\x0d\x14\x0a\x0d\xd8\x92\x1b\xa0\xf0\xfa\x75\x12\x97\x37\xfd\x92\x7a\xf1\x9e\x26\x9c\x52\x61\xe9\x92\x0b\xe0\x06\x74\x23\x5d\xec\x55\x12\x6c\x89\x87\x09\x49\x1b\xa6\x23\x78\xaf\x28\xa9\x5b\xa3\xb4\x50\x31\xc1\x73\xae\x1a\x03\x2c\xb7\x4a\x1b\x58\x6a\x55\x01\xde\x95\xac\x31\x96\x08\xd1\xf5\xc1\xd6\x8c\x0b\xe7\x4b\xce\xa4\xa0\x34\xb0\x3c\x6f\xaa\x86\x92\x52\xb9\x02\x94\xaa\x59\x95\xad\x2c\x56\x81\x0f\x4c\x42\xc9\x55\x2f\x8f\xa9\x59\x05\xcc\x5a\x96\xdf\x9a\x4b\xe8\x6e\x05\x60\x1a\xc1\x72\x2c\x68\x57\xae\xaa\x4a\x49\xb8\xd1\x05\xd4\x4c\xdb\x2d\x98\xc3\xec\x82\xe5\xb9\x8b\x72\x11\xbc\x91\x5b\x25\x11\x4a\xb6\x76\x12\xc2\x7b\x5f\x50\x90\x5c\x7f\x61\x39\x66\x4a\xf5\xab\xa1\x62\xdb\x8e\x5d\x2b\xfd\x86\xdb\x92\x7b\xf5\xd4\xa8\x2b\xda\x5a\x80\xe0\x15\xb7\x26\x4a\xe2\x7a\x7f\xa3\xee\x63\xb3\x08\x4b\xa5\xf9\x6f\x94\xda\x88\xe1\xf5\x69\x8f\x2e\x97\xee\x6e\x74\x56\x17\xb8\xb4\x33\x78\xe1\xef\xc6\x63\x1c\xb7\x35\xd0\x39\x10\x77\x34\x5d\x6d\x49\x01\x67\x06\x37\x3e\xa1\xf5\x89\x44\x61\x07\x12\x14\x47\x50\xf3\x4c\x5f\xbf\xae\xef\x7a\x39\xfa\xac\x78\xda\x13\x21\x04\x1c\x2a\x65\xcd\x7b\x35\x5e\x42\xc5\x6e\x11\x18\x24\xec\xa8\x46\x6e\x85\x76\x15\x16\x77\x1d\x82\xd8\x6e\x10\xed\xd7\xe4\xba\xe9\x0f\x9e\x20\x97\xab\x67\xd7\x53\x8f\x48\x7a\x20\xf2\xcf\xae\xa7\x5c\x5a\xf5\xec\x7a\x3a\xbd\x9b\x7e\xe4\xbf\x67\xd7\x53\x25\x9f\x5d\x4f\x6d\x89\xcf\xae\xa7\xcf\xae\x6f\x86\x58\xf6\x23\x7d\x6e\x49\xcb\xd0\x10\xbb\x0e\xe3\x01\x58\xa6\x57\x68\xd3\xe0\x7f\x58\xa6\x1a\x3b\xcb\x04\x93\xb7\xc1\xc2\xc9\x4b\xe9\x86\x83\xc1\x03\x29\x2a\xd4\xcc\x10\x28\x48\x66\x87\x93\xb6\x1f\x62\x60\x6c\x1a\xad\x55\x23\x29\x2e\x02\x9d\xda\xf9\xa8\x1c\x11\xce\x48\x35\x93\x28\xc9\x74\xbc\x78\xab\xea\x6d\xe8\x88\xb8\xed\x27\x8a\x34\x4d\x5d\x2b\x6d\xa3\xa1\x42\x19\xd5\x42\x02\x4d\xfc\x7a\xfa\xf2\xf5\xab\x47\xe5\x37\x94\x69\xbb\x43\xf4\x12\xb2\x4c\xad\x11\x7c\x5e\x9f\xa9\x3b\x60\xb2\x80\x25\xd7\x08\x6c\xc3\xb6\x5f\x25\x71\xe1\xaa\xb0\xcf\xc7\xed\xb2\xf5\xaf\xff\x57\xc0\xed\x9c\xfe\x12\xea\x26\x13\xdc\x94\xc0\x40\xe2\x06\x12\x63\xb5\x92\xab\x85\x1b\xcd\xa9\x2c\x75\xaf\x50\x2b\x63\x1f\xb5\x3f\x56\x19\x16\xc5\x19\x04\x7c\x29\x00\x6c\x36\x9b\xa8\x53\xa5\xb3\x7e\x89\xa2\x8e\xe9\x06\x6c\x24\xb7\xdb\xd8\x7b\x92\x92\xf1\xd7\xbc\x48\xaf\x5f\x5f\xbf\x7a\x75\xfd\xe2\x5f\x5e\xbf\x7c\x79\xfd\xfa\xc5\xcb\x87\xa0\x41\xa7\xfa\x4c\x64\xf8\x4c\xfa\x5b\x45\xa5\x6b\x9f\x46\x7b\xc0\x74\xe9\x1b\x05\xe9\x82\xca\x10\x1d\xfc\xc3\x20\x6a\x24\xe5\x22\x21\x13\x67\xd3\x88\x4f\x80\x91\xc3\xd1\x23\x92\x7d\x26\xb6\x3a\xfc\x10\x54\x54\x63\xe9\x84\x5d\x45\xcf\x95\xec\xf1\x74\x09\x86\x57\xb5\xd8\x42\xbe\xb7\xfa\x03\xc0\x7a\xd0\x2a\xbf\x8b\xab\x43\xbb\x79\x94\xb9\x0c\xa0\x52\x05\x52\xe4\x37\x8d\xc9\xb1\x76\xbd\x5e\x8a\xa6\x7f\xda\xfe\xc6\xa4\xe5\x12\xbb\xa8\x1b\xc1\x77\x52\x6c\xa1\x31\x08\x4b\xa5\xa1\xc0\xac\x59\xad\x5c\xaa\xa0\xa1\xd6\x7c\xcd\x2c\x76\xa1\xd6\xb4\xb0\xe8\x51\x31\xa8\x6e\x28\xed\x11\x83\x2c\xe4\x6f\xaa\x81\x9c\x49\xb0\x9a\xe5\xb7\xde\x55\x1a\xad\xc9\x55\x6a\xf4\xa7\xe9\x83\x7d\x86\x42\x6d\xdc\x12\x7f\xee\x25\x47\xe1\x22\xbf\x41\x84\x52\x6d\xa0\x6a\x72\xe7\x92\x14\xd9\xdd\x21\x36\x8c\x5b\x68\xa4\xe5\xc2\x2b\xd4\x36\x5a\x52\x9e\x80\x07\x91\xfa\xa4\xfe\x4b\xb0\x5a\xbc\x2f\xf1\x4c\x5a\xd4\x57\x6e\xa0\xf1\xad\x5f\x0e\xb5\x56\x16\x73\xb2\x28\xb0\x15\xe3\xd2\x90\x45\x5c\x2e\x80\xd5\x47\x54\x76\xfd\x53\xfb\xb0\xef\x53\xba\xe9\x38\x86\xbf\x0a\x95\x31\x01\x6b\x82\x7a\x26\x28\xa5\x53\x50\x2a\x3a\xfa\x40\x5b\xc6\x32\xdb\x18\x50\x4b\x37\xea\x25\xa7\xfd\x6b\xa6\xc9\x82\x58\xd5\x16\xd2\xb6\xcb\x46\x63\x06\xf5\xba\xed\x1d\xd2\x2b\x55\xef\x07\xf3\xbd\xd6\x53\xf8\xf9\x97\xf9\x93\x56\x94\x3f\xe3\xd2\x41\x82\x00\xee\x8f\x6c\x4b\x66\x21\xd7\xc8\x2c\x1a\xc8\x85\x32\x8d\xf6\x12\x16\x5a\xd5\x40\x52\x76\x94\x3a\xca\x34\x51\x3b\x6e\x1d\x91\x71\xc9\x4c\x39\x69\x9b\x84\x1a\x9d\x95\xfa\xb9\x6e\xfc\x82\x50\x37\x26\x02\x3c\x9d\xce\x81\x27\x1d\xdd\x48\xa0\x5c\xd9\x72\x0e\xfc\xf9\xf3\x7e\xf1\x05\x5f\xc2\xb8\x5b\xf1\x33\xff\x25\xb2\x77\x11\x71\x81\x34\x85\x21\x37\xc7\xb0\xa5\x63\x6a\xc1\x73\x1c\xf3\x4b\xb8\x9a\xcc\xbb\xd9\x4c\x23\xbb\xed\xde\x5a\x3b\xfa\xff\xdc\xdf\xdd\xfc\x50\x33\x4e\xf9\x07\xba\xf1\xf5\xbf\x01\x06\x2b\x6e\x2c\x34\x5a\x40\xeb\xc3\xde\x04\xbd\x41\xdc\xba\xa1\x56\x4e\x70\xd9\x3e\xb4\x98\xea\x8e\xe0\xc9\x44\x06\x65\x31\xfe\xb7\x1f\xbf\xfb\x36\x32\x56\x73\xb9\xe2\xcb\xed\xf8\xbe\xd1\x62\x06\x4f\xc7\xc1\x3f\x35\x5a\x04\x93\x9f\xa7\xbf\x44\x6b\x26\x1a\xbc\x74\xf6\x9e\xb9\xbf\x27\x5c\x2e\xa1\x7d\x9c\xc1\x21\xc3\xdd\x64\x32\x3f\xdf\x2b\x19\xb4\x76\x34\x1a\xb4\x63\x5a\xd8\x03\xff\x58\x47\x0c\x2a\xb4\xa5\x72\xae\xab\x31\x57\x52\x62\x6e\xa1\xa9\x95\x6c\x55\x02\x42\x19\xb3\x07\x62\xb7\x22\x3d\x05\x45\xbb\x3e\x75\xe1\xfa\xbf\x30\xfb\x51\xe5\xb7\x68\xc7\xe3\xf1\x86\xcb\x42\x6d\x22\xa1\xfc\x5d\x1b\x91\x93\xaa\x5c\x09\x48\xd3\x14\xda\x30\x1a\x4c\xe0\x6b\x08\x36\x86\x02\x6a\x00\x33\x7a\xa4\xa7\x09\x3c\x87\xe3\xed\x25\x45\xfc\xe7\x10\xc4\xac\xe6\xc1\xc4\xbb\x43\xa7\x78\x25\x2b\x34\x86\xad\x70\x28\xa0\xab\x8e\x7a\x90\xd1\x39\x2a\xb3\x82\x14\x9c\x81\x6a\xa6\x0d\xfa\x25\x11\x55\xe4\x1d\xda\x08\xb3\x6e\x59\x9a\x82\x6c\x84\xd8\x83\xd4\x3b\xc5\xbc\x83\xdf\xc1\xf2\xc8\x07\x9b\xaf\xd2\x14\xa8\x3c\x25\x15\x17\xfb\x9d\x64\x7c\x5f\x48\x4f\x22\x8a\x0b\xfb\x1d\x93\xf9\x10\xcd\x07\xd4\xb0\xf8\x3d\x72\x58\x1c\xd3\xc3\xe2\x01\x82\xae\x6f\xf1\x18\x3d\xdf\xe7\x18\x90\x73\x03\x0f\x50\x93\x4d\x95\xa1\x7e\x8c\x9c\xef\x5b\xb4\xe4\x9c\xaa\xdf\x49\x3b\xd8\x7b\x09\x57\xaf\x26\x0f\x50\x47\xad\xd5\x83\xc4\xa5\xb2\xdb\xf1\xbd\x60\x5b\x4a\x9a\x60\x64\x55\xfd\xd6\xb5\x19\x46\x97\x2e\xe2\xce\xa0\xa7\x70\xe9\x1a\xc8\x33\x18\xb9\x37\x9a\xe7\x15\xba\x5d\x2f\xa7\xd3\xe9\x25\x74\xdf\x5e\xfe\xc4\xc8\x09\x75\x83\xbb\x07\xe4\x31\x4d\x9e\x53\xdc\xff\x1c\x89\x5a\x1a\xbd\x4c\xed\xfb\x67\x48\xd5\xc7\x86\x03\xb1\xe0\x0f\x7f\x80\x93\xd9\x43\x18\xc7\x31\xfc\x07\xa3\x52\x5c\x08\xd7\x41\x70\x8d\x83\x7e\x7d\xc5\x8d\x71\x05\xb9\x81\x42\x49\x6c\xf7\x7c\xda\xb5\x7f\x22\x63\xbb\x0c\x16\x30\x3d\x16\x90\xae\xc3\x41\x58\x38\x13\x2d\x06\x74\x0f\x03\xc1\xc5\x6e\xc8\xef\x60\x27\xaf\x10\xbe\x4a\x21\x08\x86\x9b\x4f\x56\xd0\x82\x9e\xd8\x85\x41\xfb\xde\xdb\x62\xdc\x46\xc7\x73\xb1\x6b\x72\x09\x37\xd3\xe9\x74\x72\x22\xc4\x6e\xaf\xde\x37\x35\xa5\x4d\xc0\xe4\xd6\x5d\x89\xbd\x6e\x5d\xe2\x48\x29\x10\x5d\x69\x02\x72\x25\x84\xcf\x59\xda\xad\xa4\xe0\xb6\x81\x92\x42\x78\x35\x3f\x13\x45\x07\x9a\x1c\x1c\xed\xd8\x3c\x67\x74\x7f\x6c\xa2\x43\x9d\x1d\x2d\x0e\xaf\x0e\x8c\x72\x60\xaf\xf3\x86\xb9\xe8\xe5\xe6\x7b\x8d\x1e\x99\x6b\x6f\xaf\x63\x9d\x0d\xe4\xf7\x74\x9e\x5f\x7d\xe4\x31\xfa\xe9\xba\x31\xe5\xf8\x48\xd0\xc9\xfc\xd4\x36\xef\x2c\x6a\xca\x92\x15\x85\x2c\xb2\x05\xd5\x02\x1a\x4f\x4c\xe2\x52\x75\x8d\xa1\x46\x59\xa0\xee\x52\x0a\x9f\xd9\x53\x02\x78\x60\x32\x5f\x56\x0e\xe1\x34\x38\xd1\x89\x6e\xe7\xc0\x61\x41\x69\x1e\xf0\x30\x1c\x9c\xc5\xe5\x65\x4a\x22\x00\xc0\x91\x27\x38\xb4\x1e\xc0\x95\x16\xa3\x60\xb5\xc1\x02\x52\xf0\xdf\xc3\xc7\x93\xa8\x91\xfc\x6e\x3c\x09\xdb\xf7\x63\x1a\xdd\xfc\xbc\x2f\x16\x3b\xd9\x9f\xa7\x10\x24\x56\x03\x2f\xd2\x51\x00\xcf\xcf\xf9\x21\x85\xde\xd1\x62\x2f\xc1\x70\x2b\x40\x62\x8b\x85\x6b\x88\xfa\xaa\xed\xef\x41\xc6\xf2\xdb\x95\xab\x86\x66\x94\x6f\x8d\x4f\xc8\xb2\x35\xb3\x4c\x3b\xaa\x93\x39\xec\x97\xb7\xe5\x62\x4e\x16\x9a\x83\xaf\x4b\x5d\xdf\x15\xfa\x6f\x15\xee\x2d\x53\xba\x40\x1d\x6a\x56\xf0\xc6\xcc\xe0\x45\x7d\x37\xff\x7b\xf7\x2d\xc7\x75\x87\x1f\x15\xb5\xd6\xb8\x38\x91\xa8\x6d\x37\x3e\x87\x20\x89\x69\xc1\xef\x91\xe9\x0f\x3b\xfc\x0e\x0f\x67\x7a\xe0\xd0\x7f\x25\x6f\xc7\x2b\x5e\x14\x02\x49\xe0\x3d\x79\xf2\x48\xb2\xff\xd0\xaf\x0e\x59\x42\xdb\xfc\xde\xef\xd9\x01\x0a\x83\x8f\x6c\xe8\xfb\xe8\x23\x02\x40\x48\x47\xe6\x4e\xe7\x6d\xc9\xed\x86\xf5\xc8\xe9\xa2\xfd\x55\x45\xd1\x68\x97\x70\x8d\xc3\x16\x60\x97\x30\x32\x94\x00\x16\x66\x34\x89\xca\xa6\x62\x92\xff\x86\x63\x0a\x4e\x13\xaf\x2b\xd7\x98\x0f\x4e\xef\xe5\x13\x61\xf6\x1d\xf3\x51\x17\xe8\x46\xad\x12\x47\x9d\x75\x5f\xec\x2b\xfc\x19\x4c\xe7\xa3\x4f\xd4\xd0\x79\x2e\x61\xc6\x34\x0c\x5f\xc2\x2e\x02\x83\x56\xc4\xbd\x9b\xcb\x98\x1e\xf9\x7e\x86\x4b\xd2\xa5\xda\xa4\xa3\x9b\x69\x2f\xa4\x37\xb4\xb3\xf3\xa8\xc5\xda\x89\x31\x48\xca\xce\x35\x17\x70\x33\xfd\x12\xd2\xfa\x9e\xc8\xd1\x09\xac\xe6\x35\x16\xc0\x72\xcb\xd7\xf8\x7f\x70\x90\x2f\xa0\xe4\x4f\x16\x91\x70\xd8\x29\xcf\xc1\xf4\x40\x5e\x9a\xed\x75\xfb\xcf\xe4\x6f\x10\x3b\x0d\x3f\x87\xe0\xec\x41\x1e\x44\xe2\xd1\xc2\x23\xd7\x7e\xd8\xef\xdd\x97\xa6\xe0\x38\xb0\x50\xca\xdb\x7f\x25\x9d\x44\xa5\xad\xc4\x38\x48\xac\xfb\xbd\x0c\xc9\xdc\x53\x70\x04\xfc\xf0\x61\x5e\xb7\x3b\xac\x66\xa8\x88\xc7\xa3\x62\x0b\x06\x19\x4a\x5f\x90\x75\xe9\x08\xec\xf6\x3f\x2b\x8a\x63\xf8\xd1\x32\x6d\x81\xc1\x4f\xef\xa0\xa9\x0b\x66\xfd\x37\x1d\x0a\x92\xfe\x9b\x49\xf7\xbb\xa3\x8c\x69\x03\x4b\xa5\x37\x4c\x17\x6d\x93\xc6\x96\xb8\x75\xdf\x74\xba\xfc\xcf\xa0\x7d\x47\xb7\xd8\x9a\x89\xf1\x49\xf1\xf7\x74\x3c\x8a\x86\x26\x1f\x4d\x22\x64\x79\x79\xba\xd0\x45\xac\x9e\x6f\x0a\xdf\xba\x3a\x60\xfc\x74\x6c\x4b\x6e\x26\x11\xb3\x56\x8f\x47\x07\x60\x18\x4d\xc8\xae\x57\x83\xba\xac\xdf\x9e\x1c\xb8\xd5\x63\x34\xf6\x19\x75\x9f\x0d\x74\xcb\x73\x63\xc6\x1e\x57\xa3\xcb\x01\xed\x43\x58\x8d\x9e\x8d\x7a\x43\xed\xdd\x7b\x7f\x8e\xf4\xac\x24\x07\xa4\x47\xe4\x65\xa3\x13\xf6\xac\x28\xde\x92\xff\x8c\x83\x33\x9e\x7e\x8c\x8e\x49\xaf\x6c\x7f\x5f\x3f\xaa\x65\xff\xfb\x8c\x07\x54\xcc\x8b\xd1\x24\x32\x4d\xe6\x1b\x14\xe3\x97\x7d\x15\xd6\x2d\x73\xe0\x3d\x0e\x05\x27\x09\x05\xb1\x38\x4c\x2a\xc2\xa3\x24\xe4\x91\xa8\xd1\xb2\xf4\xa7\xda\x5d\x92\xc2\xa7\x93\xbe\xbf\xf5\x8d\xa1\x0c\xcb\x7f\x01\xd8\x60\x66\x5c\x3b\x01\x5a\xbc\xbb\x96\x8e\x6f\xdd\xbc\xf9\xfe\xdd\xa0\x7d\xd3\x7b\xc4\xd8\x51\xef\x7f\x12\x78\xae\x59\x72\xf6\x37\x88\x9b\xcd\x26\x5a\x29\xb5\x12\xfe\xd7\x87\x7d\x37\x25\x66\x35\x8f\x3e\x98\x00\x98\xd9\xca\x1c\x0a\x5c\xa2\x5e\x0c\xc8\xb7\x2d\x96\x24\xf6\xbf\x8e\x4b\x62\xff\x03\xe0\xff\x0d\x00\x00\xff\xff\x4d\x7b\xd8\x8a\x11\x2c\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
